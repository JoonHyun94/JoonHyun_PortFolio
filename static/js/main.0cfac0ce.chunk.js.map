{"version":3,"sources":["components/header.js","App.js","serviceWorker.js","index.js"],"names":["customMedia","generateMedia","maxmobile","minmobile","movingRight","keyframes","movingLeft","Headermenu","styled","div","Menu","ul","lessThan","Menuli","li","Close","Open","Anchor","withComponent","Header","props","closeMenu","setState","clicked","openMenu","state","param_id","location","document","querySelector","offsetTop","window","innerHeight","offsetHeight","scroll","scrollTo","this","onClick","scrollToParam","React","Component","Main","lazy","Info_me","Project","Contact_me","Mainloading","Loadingtext","App","completed","loadingText","progress","onbeforeunload","e","setInterval","mainLoading","classes","fallback","CircularProgress","className","variant","value","size","style","opacity","spring","Object","assign","id","withStyles","theme","margin","spacing","unit","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0cfac0ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { generateMedia} from 'styled-media-query';\r\n\r\n// 반응형 웹\r\nconst customMedia = generateMedia({\r\n    maxmobile: '575px',\r\n    minmobile: '352px',\r\n});\r\n\r\nconst movingRight = keyframes`\r\n    from { margin-left: 0%; }\r\n    to { margin-left: 90%; }\r\n`\r\nconst movingLeft = keyframes`\r\n    from { margin-left: 100%; }\r\n    to { margin-left: 0%; }\r\n`\r\n\r\nvar Headermenu = styled.div`\r\n    position: fixed;\r\n    width: 100%;\r\n    height: auto;\r\n    background-color: rgba(255, 255, 255, 0);\r\n    z-index: 2;\r\n`\r\nvar Menu = styled.ul`\r\n    float: right;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: auto;\r\n    height: auto;\r\n    border-radius: 0 0 0 1.5vw;\r\n    opacity: 0.5;\r\n    background-color: black;\r\n    ${customMedia.lessThan('maxmobile')`\r\n        width: 100%;\r\n        border-radius: 0 0 1.5vw 1.5vw;\r\n    `}\r\n`\r\n\r\nvar Menuli = styled.li`\r\n    color: white;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    list-style:none; /* 블릿 삭제 */\r\n    float: left;\r\n    margin: 2.5vw;\r\n    font-family: JejuGothic, NanumGothic;\r\n    font-size: 1vw;\r\n    ${customMedia.lessThan('maxmobile')`\r\n        margin: 2.5vw;\r\n        font-size: 3vw;\r\n    `}\r\n`\r\nconst Close = styled.div`\r\n    ${customMedia.lessThan('maxmobile')`\r\n        cursor: pointer;\r\n        position: absolute;\r\n        top: 0.5vw;\r\n        margin-left: 90%;\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            margin-top: 4vw;\r\n            margin-left: 5vw;\r\n            height: 3vw;\r\n            border: solid white;\r\n            border-width: 0 0.7vw 0.7vw 0;\r\n            transform: rotate(45deg);\r\n        }\r\n        &:after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            margin-top: 4vw;\r\n            margin-left: 5vw;\r\n            height: 3vw;\r\n            border: solid white;\r\n            border-width: 0 0.7vw 0.7vw 0;\r\n            transform: rotate(-45deg);\r\n        }\r\n    `}\r\n`\r\nconst Open = styled.div`\r\n    ${customMedia.lessThan('maxmobile')`\r\n        cursor: pointer;\r\n        float: right;\r\n        content: '';\r\n        position: absolute;\r\n        top: 1vw;\r\n        left: 0;\r\n        margin-top: 2vw;\r\n        margin-left: 5vw;\r\n        height: 3vw;\r\n        border: solid white;\r\n        border-width: 0.5vw 0.5vw 0.5vw 0;\r\n        transform: rotate(90deg);\r\n        &:before {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            margin-top: -0.5vw;\r\n            margin-left: 1.3vw;\r\n            height: 3vw;\r\n            border: solid white;\r\n            border-width: 0.5vw 0.5vw 0.5vw 0;\r\n            transform: rotate(180deg);\r\n        }\r\n        &:after {\r\n            content: '';\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            margin-top: -0.5vw;\r\n            margin-left: 2.6vw;\r\n            height: 3vw;\r\n            border: solid white;\r\n            border-width: 0.5vw 0.5vw 0.5vw 0;\r\n            transform: rotate(180deg);\r\n        }\r\n    `}\r\n`\r\nconst Anchor = styled(Menuli.withComponent(\"a\"))`\r\n    margin: 0 auto;\r\n`\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: true\r\n        };\r\n    }\r\n\r\n    scrollToParam (param_id) {\r\n        var location = document.querySelector(param_id).offsetTop;\r\n        if(param_id === \"#Skill\") {\r\n            location =  (location - window.innerHeight) + (document.querySelector(param_id).offsetHeight * 1.1);\r\n        }\r\n        scroll.scrollTo(location); // react-scroll\r\n    }\r\n\r\n    closeMenu = () => {\r\n        Headermenu = styled.div`\r\n            position: fixed;\r\n            width: 100%;\r\n            height: auto;\r\n            background-color: rgba(255, 255, 255, 0);\r\n            animation: ${ movingRight } 0.5s;\r\n            margin-left: 90%;\r\n            z-index :9999\r\n        `\r\n        Menuli = styled.li`\r\n            text-align: center;\r\n            list-style:none; /* 블릿 삭제 */\r\n            float: left;\r\n            margin: 2.5vw;\r\n            font-family: JejuGothic, NanumGothic;\r\n            font-size: 1vw;\r\n            ${customMedia.lessThan('maxmobile')`\r\n                float: right;\r\n                margin: 2.5vw;\r\n                font-size: 3vw;\r\n            `}\r\n        `\r\n        this.setState({\r\n            clicked: false,\r\n        });\r\n    }\r\n    openMenu = () => {\r\n        Headermenu = styled.div`\r\n            position: fixed;\r\n            width: 100%;\r\n            height: auto;\r\n            background-color: rgba(255, 255, 255, 0);\r\n            animation: ${ movingLeft } 0.5s;\r\n            z-index :9999\r\n        `\r\n        Menuli = styled.li`\r\n            text-align: center;\r\n            list-style:none; /* 블릿 삭제 */\r\n            float: left;\r\n            margin: 2.5vw;\r\n            font-family: JejuGothic, NanumGothic;\r\n            font-size: 1vw;\r\n            ${customMedia.lessThan('maxmobile')`\r\n                float: left;\r\n                margin: 2.5vw;\r\n                font-size: 3vw;\r\n            `}\r\n        `\r\n        this.setState({\r\n            clicked: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.clicked ? \r\n                    <Headermenu>\r\n                        <Menu>\r\n                            <Close onClick={ this.closeMenu }/>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Maindisplay') }>Home</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Me') }>About</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Skill') }>Skill</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Projectdisplay') }>Project</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Contactdisplay') }>Contact</Anchor></Menuli>\r\n                        </Menu>\r\n                    </Headermenu> : \r\n                    <Headermenu>\r\n                        <Menu>\r\n                            <Open onClick={ this.openMenu }/>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Maindisplay') }>Home</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Me') }>About</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Skill') }>Skill</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Projectdisplay') }>Project</Anchor></Menuli>\r\n                            <Menuli><Anchor onClick = { () => this.scrollToParam('#Contactdisplay') }>Contact</Anchor></Menuli>\r\n                        </Menu>\r\n                    </Headermenu>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component, lazy, Suspense } from 'react';\r\nimport './App.css';\r\nimport Header from './components/header';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport styled from 'styled-components';\r\nimport { Motion, spring } from 'react-motion';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst Main = lazy(() => import('./components/main'));\r\nconst Info_me = lazy(() => import('./components/info_me'));\r\nconst Project = lazy(() => import('./components/project'));\r\nconst Contact_me = lazy(() => import('./components/contact_me'));\r\n\r\nconst Mainloading = styled.div`\r\n  position: absolute;\r\n  top: 43%;\r\n  left: 50%;\r\n  transform:translateX(-50%);\r\n  text-align: center;\r\n`\r\nconst Loadingtext = styled.div`\r\n  position: absolute;\r\n  font-family: JejuGothic, NanumGothic;\r\n  font-size: 1.5vw;\r\n  top: 43%;\r\n  left: 50%;\r\n  transform:translateX(-50%);\r\n`\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    completed: 0, // 로딩 애니메이션의 초기값: 0, 0 ~ 100까지 게이지가 채워짐\r\n    loadingText: 0 // 로딩 텍스트\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 페이지 나갈 시 경고메시지 or 스크롤 상단\r\n    window.onbeforeunload = (e) => {\r\n      window.scrollTo(0, 0);\r\n      return \"페이지를 나가시겠습니까?\";\r\n    };\r\n    setInterval(this.mainLoading);\r\n    setInterval(this.progress, 20); // 0.02초마다 progress함수가 실행됨\r\n    setInterval(this.loadingText, 20);\r\n  }\r\n\r\n  // 애니메이션 함수\r\n  progress = () => {\r\n    const { completed } = this.state;\r\n    // completed가 100이되면 0으로 돌아가고 아닐 시 1씩 증가\r\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 })\r\n  }\r\n\r\n  // 로딩 텍스트\r\n  loadingText = () => {\r\n    const { loadingText } = this.state;\r\n    this.setState({ loadingText: loadingText >= 1.0 ? 0 : loadingText + 0.01 })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { completed } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Suspense fallback =\r\n          {\r\n            <Mainloading>\r\n              <CircularProgress className = { classes.progress } variant = \"determinate\" value={ completed } size = {'10vw'}/>\r\n  \r\n              <Motion style={{ opacity: spring(this.state.loadingText) }}>\r\n                    {\r\n                    ({ opacity }) =>  <Loadingtext style={Object.assign({}, this.Loadingtext, { opacity })}>\r\n                      Loading\r\n                    </Loadingtext>\r\n                    }\r\n              </Motion>\r\n            </Mainloading>\r\n          }>\r\n          {/* header */}\r\n          <Header/>\r\n\r\n          <div id = \"body\">\r\n            {/* main */}\r\n            <Main/>\r\n\r\n            {/* about_me */}\r\n            <Info_me/>\r\n\r\n            {/* Project */}\r\n            <Project/>\r\n\r\n            {/* contact_me */}\r\n            <Contact_me/>\r\n          </div>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}